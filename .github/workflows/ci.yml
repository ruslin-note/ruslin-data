on:
  push:
    branches: [main]
  pull_request:

name: CI

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Start Joplin Server Docker
        working-directory: ./tools/joplin-server
        run: |
          docker-compose up -d
          sleep 20
          bash prepare-test-server.sh

      - name: Cargo test
        run: cargo test

      - name: Stop Joplin Server Docker
        working-directory: ./tools/joplin-server
        if: always()
        run: docker-compose down
  
  build:
    name: Build
    strategy:
      matrix:
        include:
          - { os: macos-latest, cross-target: aarch64-apple-darwin }
          - { os: ubuntu-latest, cross-target: aarch64-unknown-linux-gnu }
          - { os: windows-latest, cross-target: aarch64-pc-windows-msvc }
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Cross build setup
        run: sudo apt-get install binutils-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross
        if: matrix.os == 'ubuntu-latest'
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
      - name: Add ${{ matrix.cross-target }} target
        run: rustup target add ${{ matrix.cross-target }}
      - name: build
        run: cargo build
      - name: build (arm64)
        run: cargo build --target ${{ matrix.cross-target }}
